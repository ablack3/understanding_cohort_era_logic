"0","ctePreDrugTarget <- sqldf::sqldf("""
"0","    SELECT"
"0","        d.drug_exposure_id"
"0","        , d.person_id"
"0","        , c.concept_id AS ingredient_concept_id"
"0","        , d.drug_exposure_start_date AS drug_exposure_start_date"
"0","        , d.days_supply AS days_supply"
"0","        , COALESCE("
"0","            ---NULLIF returns NULL if both values are the same, otherwise it returns the first parameter"
"0","            NULLIF(drug_exposure_end_date, NULL),"
"0","            ---If drug_exposure_end_date != NULL, return drug_exposure_end_date, otherwise go to next case"
"0","            NULLIF(drug_exposure_start_date + days_supply, drug_exposure_start_date),"
"0","            ---If days_supply != NULL or 0, return drug_exposure_start_date + days_supply, otherwise go to next case"
"0","            drug_exposure_start_date + 1"
"0","            ---Add 1 day to the drug_exposure_start_date since there is no end_date or INTERVAL for the days_supply"
"0","        ) AS drug_exposure_end_date"
"0","    FROM drug_exposure d"
"0","        JOIN concept_ancestor ca ON ca.descendant_concept_id = d.drug_concept_id"
"0","        JOIN concept c ON ca.ancestor_concept_id = c.concept_id"
"0","        WHERE c.vocabulary_id = 'RxNorm' ---8 selects RxNorm from the vocabulary_id"
"0","        AND c.concept_class_id = 'Ingredient'"
"0","        AND d.drug_concept_id != 0 ---Our unmapped drug_concept_id's are set to 0, so we don't want different drugs wrapped up in the same era"
"0","        AND coalesce(d.days_supply,0) >= 0 "
"0",""")"
"2","tcltk DLL is linked to '/opt/X11/lib/libX11.6.dylib'
"
"0","ctePreDrugTarget %>% arrange(drug_exposure_id)"
