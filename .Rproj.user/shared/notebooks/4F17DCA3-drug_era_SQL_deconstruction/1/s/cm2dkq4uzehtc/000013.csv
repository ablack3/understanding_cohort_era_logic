"0","cteSubExposureEndDates <- sqldf::sqldf("""
"0","      SELECT person_id, ingredient_concept_id, event_date, event_type,"
"0","        MAX(start_ordinal) OVER (PARTITION BY person_id, ingredient_concept_id"
"0","            ORDER BY event_date, event_type ROWS unbounded preceding) AS start_ordinal,"
"0","        -- this pulls the current START down from the prior rows so that the NULLs"
"0","        -- from the END DATES will contain a value we can compare with"
"0","            ROW_NUMBER() OVER (PARTITION BY person_id, ingredient_concept_id"
"0","                ORDER BY event_date, event_type) AS overall_ord"
"0","            -- this re-numbers the inner UNION so all rows are numbered ordered by the event date"
"0","        FROM ("
"0","            -- select the start dates, assigning a row number to each"
"0","            SELECT person_id, ingredient_concept_id, drug_exposure_start_date AS event_date,"
"0","            -1 AS event_type,"
"0","            ROW_NUMBER() OVER (PARTITION BY person_id, ingredient_concept_id"
"0","                ORDER BY drug_exposure_start_date) AS start_ordinal"
"0","            FROM ctePreDrugTarget"
"0",""
"0","            UNION ALL"
"0",""
"0","            SELECT person_id, ingredient_concept_id, drug_exposure_end_date, 1 AS event_type, NULL"
"0","            FROM ctePreDrugTarget"
"0","        )"")"
"2","tcltk DLL is linked to '/opt/X11/lib/libX11.6.dylib'
"
"0","cteSubExposureEndDates %>% "
"0","  mutate(is_valid_end_date = (2 * start_ordinal) - overall_ord == 0)"
